#ifndef __DRV_SENSOR_GC1004_H__
#define __DRV_SENSOR_GC1004_H__

/****************************************************************************/
#include "project.h"
#include "drv_l2_sensor.h"
#include "cdsp_cfg_iqj.h"
#include "application.h"

/****************************************************************************/
#if (USE_SENSOR_NAME == SENSOR_GC1004)

extern void gp_Cdsp_SetAWBYUV(const INT16S *AwbTable);
extern void gp_Cdsp_SetBadPixOb(const INT16U *OBTable);
void gc1004_set_exposure_gain(void);

#define GC1004_MAX_EXPOSURE_TIME			(900)//0x355//0x300
#define GC1004_MIN_EXPOSURE_TIME			0x08//0x08->0x01

#define GC1004_MAX_ANALOG_GAIN				(MAX_ANALOG_GAIN*100)//(7*100)
#define GC1004_MIN_ANALOG_GAIN				(1*100)

#define GC1004_MAX_DIGITAL_GAIN				(1*100)//(0x3FC)//4x
#define GC1004_MIN_DIGITAL_GAIN 			(1*100)//0x100:1x //SENSOR_GC1004

#define GC1004_SLAVE_ID						0x78
#define GC1004_SLAVE_ID_test				0xDC //GC1004_ID is 0xDC

#define GC1004_50HZ_EXP_TIME_TOTAL			210
#define	GC1004_50HZ_INIT_EV_IDX				100

#define GC1004_50HZ_NIGHT_EV_IDX			175//105//120//180//210//190///250//156
#define GC1004_50HZ_DAY_EV_IDX				128//96//200//120//202//56
#define GC1004_50HZ_MAX_EXP_IDX				(GC1004_50HZ_EXP_TIME_TOTAL-30)//31)  // <= GC1004_50HZ_EXP_TIME_TOTAL


#define GC1004_60HZ_EXP_TIME_TOTAL			197
#define	GC1004_60HZ_INIT_EV_IDX				122
#define GC1004_60HZ_NIGHT_EV_IDX			210
#define GC1004_60HZ_DAY_EV_IDX			    197
#define GC1004_60HZ_MAX_EXP_IDX				(GC1004_60HZ_EXP_TIME_TOTAL-1)  // <= GC1004_60HZ_EXP_TIME_TOTAL


#define GC1004_GC_AE			0

#define ANALONG_GAIN			1.5
/**************************************************************************
 *                         G L O B A L    D A T A  For CDSP using                          *
 **************************************************************************/
 #if  0//GC1004_GC_AE
static const  int g_GC1004_exp_time_gain_60Hz[GC1004_60HZ_EXP_TIME_TOTAL][3] = 
{ // {time, analog gain, digital gain}
{8	,(int)(1.00*256), (int)(1.00*256)},
{9	,(int)(1.00*256), (int)(1.00*256)},
{9	,(int)(1.00*256), (int)(1.00*256)},
{9	,(int)(1.00*256), (int)(1.00*256)},
{10	,(int)(1.00*256), (int)(1.00*256)},
{10	,(int)(1.00*256), (int)(1.00*256)},
{10	,(int)(1.00*256), (int)(1.00*256)},
{11	,(int)(1.00*256), (int)(1.00*256)},
{11	,(int)(1.00*256), (int)(1.00*256)},
{11	,(int)(1.00*256), (int)(1.00*256)},//10
{12	,(int)(1.00*256), (int)(1.00*256)},
{12	,(int)(1.00*256), (int)(1.00*256)},
{13	,(int)(1.00*256), (int)(1.00*256)},
{13	,(int)(1.00*256), (int)(1.00*256)},
{13	,(int)(1.00*256), (int)(1.00*256)},
{14	,(int)(1.00*256), (int)(1.00*256)},
{14	,(int)(1.00*256), (int)(1.00*256)},
{15	,(int)(1.00*256), (int)(1.00*256)},
{16	,(int)(1.00*256), (int)(1.00*256)},
{16	,(int)(1.00*256), (int)(1.00*256)},//20
{17	,(int)(1.00*256), (int)(1.00*256)},
{17	,(int)(1.00*256), (int)(1.00*256)},
{18	,(int)(1.00*256), (int)(1.00*256)},
{18	,(int)(1.00*256), (int)(1.00*256)},
{19	,(int)(1.00*256), (int)(1.00*256)},
{20	,(int)(1.00*256), (int)(1.00*256)},
{20	,(int)(1.00*256), (int)(1.00*256)},
{21	,(int)(1.00*256), (int)(1.00*256)},
{22	,(int)(1.00*256), (int)(1.00*256)},
{23	,(int)(1.00*256), (int)(1.00*256)},//30
{24	,(int)(1.00*256), (int)(1.00*256)},
{24	,(int)(1.00*256), (int)(1.00*256)},
{25	,(int)(1.00*256), (int)(1.00*256)},
{26	,(int)(1.00*256), (int)(1.00*256)},
{27	,(int)(1.00*256), (int)(1.00*256)},
{28	,(int)(1.00*256), (int)(1.00*256)},
{29	,(int)(1.00*256), (int)(1.00*256)},
{30	,(int)(1.00*256), (int)(1.00*256)},
{31	,(int)(1.00*256), (int)(1.00*256)},
{32	,(int)(1.00*256), (int)(1.00*256)},//40
{33	,(int)(1.00*256), (int)(1.00*256)},
{34	,(int)(1.00*256), (int)(1.00*256)},
{36	,(int)(1.00*256), (int)(1.00*256)},
{37	,(int)(1.00*256), (int)(1.00*256)},
{38	,(int)(1.00*256), (int)(1.00*256)},
{40	,(int)(1.00*256), (int)(1.00*256)},
{41	,(int)(1.00*256), (int)(1.00*256)},
{42	,(int)(1.00*256), (int)(1.00*256)},
{44	,(int)(1.00*256), (int)(1.00*256)},
{45	,(int)(1.00*256), (int)(1.00*256)},//50
{47	,(int)(1.00*256), (int)(1.00*256)},
{49	,(int)(1.00*256), (int)(1.00*256)},
{50	,(int)(1.00*256), (int)(1.00*256)},
{52	,(int)(1.00*256), (int)(1.00*256)},
{54	,(int)(1.00*256), (int)(1.00*256)},
{56	,(int)(1.00*256), (int)(1.00*256)},
{58	,(int)(1.00*256), (int)(1.00*256)},
{60	,(int)(1.00*256), (int)(1.00*256)},
{62	,(int)(1.00*256), (int)(1.00*256)},
{64	,(int)(1.00*256), (int)(1.00*256)},//60
{66	,(int)(1.00*256), (int)(1.00*256)},
{69	,(int)(1.00*256), (int)(1.00*256)},
{71	,(int)(1.00*256), (int)(1.00*256)},
{74	,(int)(1.00*256), (int)(1.00*256)},
{76	,(int)(1.00*256), (int)(1.00*256)},
{79	,(int)(1.00*256), (int)(1.00*256)},
{82	,(int)(1.00*256), (int)(1.00*256)},
{85	,(int)(1.00*256), (int)(1.00*256)},
{88	,(int)(1.00*256), (int)(1.00*256)},
{91	,(int)(1.00*256), (int)(1.00*256)},//70
{94	,(int)(1.00*256), (int)(1.00*256)},
{97	,(int)(1.00*256), (int)(1.00*256)},
{101,(int)(1.00*256), (int)(1.00*256)},
{104,(int)(1.00*256), (int)(1.00*256)},
{108,(int)(1.00*256), (int)(1.00*256)},
{112,(int)(1.00*256), (int)(1.00*256)},
{116,(int)(1.00*256), (int)(1.00*256)},
{120,(int)(1.00*256), (int)(1.00*256)},
{124,(int)(1.00*256), (int)(1.00*256)},
{128,(int)(1.00*256), (int)(1.00*256)},//80
{133,(int)(1.00*256), (int)(1.00*256)},
{138,(int)(1.00*256), (int)(1.00*256)},
{142,(int)(1.00*256), (int)(1.00*256)},
{148,(int)(1.00*256), (int)(1.00*256)},
{153,(int)(1.00*256), (int)(1.00*256)},
{158,(int)(1.00*256), (int)(1.00*256)},
{164,(int)(1.00*256), (int)(1.00*256)},
{169,(int)(1.00*256), (int)(1.00*256)},
{175,(int)(1.00*256), (int)(1.00*256)},
{182,(int)(1.00*256), (int)(1.00*256)},//90
{188,(int)(1.00*256), (int)(1.00*256)},
{188,(int)(1.04*256), (int)(1.00*256)},
{188,(int)(1.06*256), (int)(1.00*256)},
{188,(int)(1.11*256), (int)(1.00*256)},
{188,(int)(1.15*256), (int)(1.00*256)},//95,daylight
{188,(int)(1.19*256), (int)(1.00*256)},
{188,(int)(1.23*256), (int)(1.00*256)},
{188,(int)(1.27*256), (int)(1.00*256)},
{188,(int)(1.31*256), (int)(1.00*256)},
{188,(int)(1.37*256), (int)(1.00*256)},//100
{188,(int)(1.41*256), (int)(1.00*256)},
{188,(int)(1.46*256), (int)(1.00*256)},
{188,(int)(1.52*256), (int)(1.00*256)},
{188,(int)(1.57*256), (int)(1.00*256)},
{188,(int)(1.62*256), (int)(1.00*256)},
{188,(int)(1.68*256), (int)(1.00*256)},
{188,(int)(1.74*256), (int)(1.00*256)},
{210,(int)(1.68*256), (int)(1.00*256)},
{220,(int)(1.65*256), (int)(1.00*256)},
{250,(int)(1.50*256), (int)(1.00*256)},//110
{280,(int)(1.40*256), (int)(1.00*256)},
{310,(int)(1.30*256), (int)(1.00*256)},
{340,(int)(1.23*256), (int)(1.00*256)},
{376,(int)(1.11*256), (int)(1.00*256)},
{376,(int)(1.15*256), (int)(1.00*256)},
{376,(int)(1.19*256), (int)(1.00*256)},
{376,(int)(1.23*256), (int)(1.00*256)},
{376,(int)(1.27*256), (int)(1.00*256)},
{376,(int)(1.31*256), (int)(1.00*256)},
{376,(int)(1.37*256), (int)(1.00*256)},//120
{376,(int)(1.41*256), (int)(1.00*256)},
{376,(int)(1.46*256), (int)(1.00*256)},//121,init
{376,(int)(1.52*256), (int)(1.00*256)},
{376,(int)(1.57*256), (int)(1.00*256)},
{376,(int)(1.62*256), (int)(1.00*256)},
{376,(int)(1.68*256), (int)(1.00*256)},
{376,(int)(1.74*256), (int)(1.00*256)},
{376,(int)(1.80*256), (int)(1.00*256)},
{406,(int)(1.73*256), (int)(1.00*256)},
{440,(int)(1.65*256), (int)(1.00*256)},//130
{475,(int)(1.57*256), (int)(1.00*256)},//
{516,(int)(1.50*256), (int)(1.00*256)},
{546,(int)(1.46*256), (int)(1.00*256)},
{564,(int)(1.46*256), (int)(1.00*256)},
{564,(int)(1.52*256), (int)(1.00*256)},
{564,(int)(1.57*256), (int)(1.00*256)},
{564,(int)(1.62*256), (int)(1.00*256)},
{564,(int)(1.68*256), (int)(1.00*256)},
{564,(int)(1.74*256), (int)(1.00*256)},
{564,(int)(1.80*256), (int)(1.00*256)},//140
{600,(int)(1.76*256), (int)(1.00*256)},
{630,(int)(1.74*256), (int)(1.00*256)},
{670,(int)(1.71*256), (int)(1.00*256)},
{700,(int)(1.69*256), (int)(1.00*256)},
{752,(int)(1.62*256), (int)(1.00*256)},
{752,(int)(1.68*256), (int)(1.00*256)},
{752,(int)(1.74*256), (int)(1.00*256)},
{752,(int)(1.80*256), (int)(1.00*256)},
{752,(int)(1.87*256), (int)(1.00*256)},
{752,(int)(1.93*256), (int)(1.00*256)},//150, night
{752,(int)(2.00*256), (int)(1.00*256)},
{752,(int)(2.07*256), (int)(1.00*256)},
{752,(int)(2.14*256), (int)(1.00*256)},
{752,(int)(2.22*256), (int)(1.00*256)},
{752,(int)(2.30*256), (int)(1.00*256)},
{752,(int)(2.38*256), (int)(1.00*256)},
{752,(int)(2.46*256), (int)(1.00*256)},
{752,(int)(2.55*256), (int)(1.00*256)},
{752,(int)(2.64*256), (int)(1.00*256)},
{752,(int)(2.73*256), (int)(1.00*256)},//160
{752,(int)(2.83*256), (int)(1.00*256)},
{752,(int)(2.93*256), (int)(1.00*256)},
{752,(int)(3.03*256), (int)(1.00*256)},
{752,(int)(3.14*256), (int)(1.00*256)},
{752,(int)(3.25*256), (int)(1.00*256)},
{752,(int)(3.36*256), (int)(1.00*256)},
{752,(int)(3.48*256), (int)(1.00*256)},
{752,(int)(3.61*256), (int)(1.00*256)},
{752,(int)(3.73*256), (int)(1.00*256)},
{752,(int)(3.86*256), (int)(1.00*256)},//170
{752,(int)(4.00*256), (int)(1.00*256)},
{752,(int)(4.14*256), (int)(1.00*256)},
{752,(int)(4.29*256), (int)(1.00*256)},
{752,(int)(4.44*256), (int)(1.00*256)},
{752,(int)(4.59*256), (int)(1.00*256)},
{752,(int)(4.76*256), (int)(1.00*256)},
{752,(int)(4.92*256), (int)(1.00*256)},
{752,(int)(5.10*256), (int)(1.00*256)},
{752,(int)(5.28*256), (int)(1.00*256)},
{752,(int)(5.46*256), (int)(1.00*256)},//180
{752,(int)(5.66*256), (int)(1.00*256)},
{752,(int)(5.86*256), (int)(1.00*256)},
{752,(int)(6.06*256), (int)(1.00*256)},
{752,(int)(6.28*256), (int)(1.00*256)},
{752,(int)(6.50*256), (int)(1.00*256)},
{752,(int)(6.73*256), (int)(1.00*256)},
{752,(int)(6.96*256), (int)(1.00*256)},
{752,(int)(7.21*256), (int)(1.00*256)},
{752,(int)(7.46*256), (int)(1.00*256)},
{752,(int)(7.73*256), (int)(1.00*256)},//190
{752,(int)(8.00*256), (int)(1.00*256)},
{752,(int)(8.28*256), (int)(1.00*256)},
{752,(int)(8.57*256), (int)(1.00*256)},
{752,(int)(8.88*256), (int)(1.00*256)},
{752,(int)(9.19*256), (int)(1.00*256)},
{752,(int)(9.51*256), (int)(1.00*256)},
{752,(int)(9.85*256), (int)(1.00*256)} 
};

static const  int g_GC1004_exp_time_gain_50Hz[GC1004_50HZ_EXP_TIME_TOTAL][3] =  //203,recount by u2
{ // {time, analog gain, digital gain}
{8  ,(int)(1.00*256),(int)(1.00*256)}, 
{9  ,(int)(1.00*256),(int)(1.00*256)}, 
{9  ,(int)(1.00*256),(int)(1.00*256)}, 
{9  ,(int)(1.00*256),(int)(1.00*256)}, 
{10 ,(int)(1.00*256),(int)(1.00*256)}, 
{10 ,(int)(1.00*256),(int)(1.00*256)}, 
{10 ,(int)(1.00*256),(int)(1.00*256)}, 
{11 ,(int)(1.00*256),(int)(1.00*256)}, 
{11 ,(int)(1.00*256),(int)(1.00*256)}, 
{11 ,(int)(1.00*256),(int)(1.00*256)},  //10
{12 ,(int)(1.00*256),(int)(1.00*256)}, 
{12 ,(int)(1.00*256),(int)(1.00*256)}, 
{13 ,(int)(1.00*256),(int)(1.00*256)}, 
{13 ,(int)(1.00*256),(int)(1.00*256)}, 
{14 ,(int)(1.00*256),(int)(1.00*256)}, 
{14 ,(int)(1.00*256),(int)(1.00*256)}, 
{15 ,(int)(1.00*256),(int)(1.00*256)}, 
{15 ,(int)(1.00*256),(int)(1.00*256)}, 
{16 ,(int)(1.00*256),(int)(1.00*256)}, 
{16 ,(int)(1.00*256),(int)(1.00*256)},  //20
{17 ,(int)(1.00*256),(int)(1.00*256)}, 
{17 ,(int)(1.00*256),(int)(1.00*256)}, 
{18 ,(int)(1.00*256),(int)(1.00*256)}, 
{19 ,(int)(1.00*256),(int)(1.00*256)}, 
{19 ,(int)(1.00*256),(int)(1.00*256)}, 
{20 ,(int)(1.00*256),(int)(1.00*256)}, 
{21 ,(int)(1.00*256),(int)(1.00*256)}, 
{21 ,(int)(1.00*256),(int)(1.00*256)}, 
{22 ,(int)(1.00*256),(int)(1.00*256)}, 
{23 ,(int)(1.00*256),(int)(1.00*256)}, 
{24 ,(int)(1.00*256),(int)(1.00*256)}, 
{25 ,(int)(1.00*256),(int)(1.00*256)}, 
{25 ,(int)(1.00*256),(int)(1.00*256)}, 
{26 ,(int)(1.00*256),(int)(1.00*256)}, 
{27 ,(int)(1.00*256),(int)(1.00*256)}, 
{28 ,(int)(1.00*256),(int)(1.00*256)}, 
{29 ,(int)(1.00*256),(int)(1.00*256)}, 
{30 ,(int)(1.00*256),(int)(1.00*256)}, 
{31 ,(int)(1.00*256),(int)(1.00*256)}, 
{32 ,(int)(1.00*256),(int)(1.00*256)},  //40
{34 ,(int)(1.00*256),(int)(1.00*256)}, 
{35 ,(int)(1.00*256),(int)(1.00*256)}, 
{36 ,(int)(1.00*256),(int)(1.00*256)}, 
{37 ,(int)(1.00*256),(int)(1.00*256)}, 
{39 ,(int)(1.00*256),(int)(1.00*256)}, 
{40 ,(int)(1.00*256),(int)(1.00*256)}, 
{41 ,(int)(1.00*256),(int)(1.00*256)}, 
{43 ,(int)(1.00*256),(int)(1.00*256)}, 
{44 ,(int)(1.00*256),(int)(1.00*256)}, 
{46 ,(int)(1.00*256),(int)(1.00*256)}, 
{48 ,(int)(1.00*256),(int)(1.00*256)}, 
{49 ,(int)(1.00*256),(int)(1.00*256)}, 
{51 ,(int)(1.00*256),(int)(1.00*256)}, 
{53 ,(int)(1.00*256),(int)(1.00*256)}, 
{55 ,(int)(1.00*256),(int)(1.00*256)}, 
{57 ,(int)(1.00*256),(int)(1.00*256)}, 
{58 ,(int)(1.00*256),(int)(1.00*256)}, 
{61 ,(int)(1.00*256),(int)(1.00*256)}, 
{63 ,(int)(1.00*256),(int)(1.00*256)}, 
{65 ,(int)(1.00*256),(int)(1.00*256)},  //60
{67 ,(int)(1.00*256),(int)(1.00*256)}, 
{70 ,(int)(1.00*256),(int)(1.00*256)}, 
{72 ,(int)(1.00*256),(int)(1.00*256)}, 
{75 ,(int)(1.00*256),(int)(1.00*256)}, 
{77 ,(int)(1.00*256),(int)(1.00*256)}, 
{80 ,(int)(1.00*256),(int)(1.00*256)}, 
{83 ,(int)(1.00*256),(int)(1.00*256)}, 
{86 ,(int)(1.00*256),(int)(1.00*256)}, 
{89 ,(int)(1.00*256),(int)(1.00*256)}, 
{92 ,(int)(1.00*256),(int)(1.00*256)}, 
{95 ,(int)(1.00*256),(int)(1.00*256)}, 
{98 ,(int)(1.00*256),(int)(1.00*256)}, 
{102,(int)(1.00*256),(int)(1.00*256)}, 
{105,(int)(1.00*256),(int)(1.00*256)}, 
{109,(int)(1.00*256),(int)(1.00*256)}, 
{113,(int)(1.00*256),(int)(1.00*256)}, 
{117,(int)(1.00*256),(int)(1.00*256)}, 
{121,(int)(1.00*256),(int)(1.00*256)}, 
{125,(int)(1.00*256),(int)(1.00*256)}, 
{130,(int)(1.00*256),(int)(1.00*256)},  //80
{134,(int)(1.00*256),(int)(1.00*256)}, 
{139,(int)(1.00*256),(int)(1.00*256)}, 
{144,(int)(1.00*256),(int)(1.00*256)}, 
{149,(int)(1.00*256),(int)(1.00*256)}, 
{154,(int)(1.00*256),(int)(1.00*256)}, 
{160,(int)(1.00*256),(int)(1.00*256)}, 
{165,(int)(1.00*256),(int)(1.00*256)}, 
{171,(int)(1.00*256),(int)(1.00*256)}, 
{177,(int)(1.00*256),(int)(1.00*256)},  
{184,(int)(1.00*256),(int)(1.00*256)},  //90
{190,(int)(1.00*256),(int)(1.00*256)}, 
{197,(int)(1.00*256),(int)(1.00*256)}, 
{204,(int)(1.00*256),(int)(1.00*256)}, 
{211,(int)(1.00*256),(int)(1.00*256)}, 
{218,(int)(1.00*256),(int)(1.00*256)}, 
{226,(int)(1.00*256),(int)(1.00*256)},  //96,daylight
{226,(int)(1.04*256),(int)(1.00*256)}, 
{226,(int)(1.06*256),(int)(1.00*256)}, 
{226,(int)(1.11*256),(int)(1.00*256)}, 
{226,(int)(1.15*256),(int)(1.00*256)},  //100
{226,(int)(1.19*256),(int)(1.00*256)}, 
{226,(int)(1.23*256),(int)(1.00*256)}, 
{226,(int)(1.27*256),(int)(1.00*256)}, 
{226,(int)(1.31*256),(int)(1.00*256)}, 
{226,(int)(1.37*256),(int)(1.00*256)}, 
{226,(int)(1.41*256),(int)(1.00*256)}, 
{226,(int)(1.46*256),(int)(1.00*256)}, 
{226,(int)(1.52*256),(int)(1.00*256)}, 
{226,(int)(1.57*256),(int)(1.00*256)}, 
{226,(int)(1.62*256),(int)(1.00*256)},  //110
{226,(int)(1.68*256),(int)(1.00*256)}, 
{226,(int)(1.74*256),(int)(1.00*256)}, 
{226,(int)(1.80*256),(int)(1.00*256)}, 
{250,(int)(1.77*256),(int)(1.00*256)}, 
{282,(int)(1.55*256),(int)(1.00*256)}, 
{282,(int)(1.67*256),(int)(1.00*256)}, 
{310,(int)(1.55*256),(int)(1.00*256)}, 
{310,(int)(1.62*256),(int)(1.00*256)}, 
{339,(int)(1.53*256),(int)(1.00*256)}, 
{339,(int)(1.58*256),(int)(1.00*256)}, 
{369,(int)(1.50*256),(int)(1.00*256)}, 
{395,(int)(1.45*256),(int)(1.00*256)}, 
{395,(int)(1.50*256),(int)(1.00*256)}, 
{452,(int)(1.37*256),(int)(1.00*256)}, 
{452,(int)(1.41*256),(int)(1.00*256)}, 
{452,(int)(1.46*256),(int)(1.00*256)}, 
{452,(int)(1.52*256),(int)(1.00*256)}, 
{452,(int)(1.57*256),(int)(1.00*256)}, 
{452,(int)(1.62*256),(int)(1.00*256)}, 
{452,(int)(1.68*256),(int)(1.00*256)},  //130
{452,(int)(1.74*256),(int)(1.00*256)}, 
{452,(int)(1.80*256),(int)(1.00*256)}, 
{452,(int)(1.87*256),(int)(1.00*256)}, 
{452,(int)(1.93*256),(int)(1.00*256)}, 
{482,(int)(1.75*256),(int)(1.00*256)}, 
{512,(int)(1.70*256),(int)(1.00*256)}, 
{542,(int)(1.64*256),(int)(1.00*256)}, 
{572,(int)(1.62*256),(int)(1.00*256)}, 
{602,(int)(1.59*256),(int)(1.00*256)}, 
{632,(int)(1.58*256),(int)(1.00*256)},  //140
{662,(int)(1.56*256),(int)(1.00*256)}, 
{678,(int)(1.57*256),(int)(1.00*256)}, 
{678,(int)(1.62*256),(int)(1.00*256)}, 
{678,(int)(1.68*256),(int)(1.00*256)}, 
{678,(int)(1.74*256),(int)(1.00*256)}, 
{678,(int)(1.80*256),(int)(1.00*256)},  
{678,(int)(1.87*256),(int)(1.00*256)}, 
{678,(int)(1.93*256),(int)(1.00*256)}, 
/*{904,(int)(1.52*256),(int)(1.00*256)}, 
{904,(int)(1.57*256),(int)(1.00*256)},  //150
{904,(int)(1.62*256),(int)(1.00*256)}, 
{904,(int)(1.68*256),(int)(1.00*256)}, */
{730,(int)(1.88*256),(int)(1.00*256)}, 
{780,(int)(1.82*256),(int)(1.00*256)},  //150
{830,(int)(1.76*256),(int)(1.00*256)}, 
{880,(int)(1.73*256),(int)(1.00*256)},
{904,(int)(1.74*256),(int)(1.00*256)}, 
{904,(int)(1.80*256),(int)(1.00*256)}, 
{904,(int)(1.87*256),(int)(1.00*256)}, 
{904,(int)(1.93*256),(int)(1.00*256)},  //156,night
{904,(int)(2.00*256),(int)(1.00*256)}, 
{904,(int)(2.07*256),(int)(1.00*256)}, 
{904,(int)(2.14*256),(int)(1.00*256)}, 
{904,(int)(2.22*256),(int)(1.00*256)},  //160
{904,(int)(2.30*256),(int)(1.00*256)}, 
{904,(int)(2.38*256),(int)(1.00*256)}, 
{904,(int)(2.46*256),(int)(1.00*256)}, 
{904,(int)(2.55*256),(int)(1.00*256)}, 
{904,(int)(2.64*256),(int)(1.00*256)}, 
{904,(int)(2.73*256),(int)(1.00*256)}, 
{904,(int)(2.83*256),(int)(1.00*256)}, 
{904,(int)(2.93*256),(int)(1.00*256)}, 
{904,(int)(3.03*256),(int)(1.00*256)}, 
{904,(int)(3.14*256),(int)(1.00*256)}, 
{904,(int)(3.25*256),(int)(1.00*256)}, 
{904,(int)(3.36*256),(int)(1.00*256)}, 
{904,(int)(3.48*256),(int)(1.00*256)}, 
{904,(int)(3.61*256),(int)(1.00*256)}, 
{904,(int)(3.73*256),(int)(1.00*256)}, 
{904,(int)(3.86*256),(int)(1.00*256)}, 
{904,(int)(4.00*256),(int)(1.00*256)}, 
{904,(int)(4.14*256),(int)(1.00*256)}, 
{904,(int)(4.29*256),(int)(1.00*256)}, 
{904,(int)(4.44*256),(int)(1.00*256)},  //180
{904,(int)(4.59*256),(int)(1.00*256)}, 
{904,(int)(4.76*256),(int)(1.00*256)}, 
{904,(int)(4.92*256),(int)(1.00*256)}, 
{904,(int)(5.10*256),(int)(1.00*256)}, 
{904,(int)(5.28*256),(int)(1.00*256)}, 
{904,(int)(5.46*256),(int)(1.00*256)}, 
{904,(int)(5.66*256),(int)(1.00*256)}, 
{904,(int)(5.86*256),(int)(1.00*256)}, 
{904,(int)(6.06*256),(int)(1.00*256)}, 
{904,(int)(6.28*256),(int)(1.00*256)}, 
{904,(int)(6.50*256),(int)(1.00*256)}, 
{904,(int)(6.73*256),(int)(1.00*256)}, 
{904,(int)(6.96*256),(int)(1.00*256)}, 
{904,(int)(7.21*256),(int)(1.00*256)}, 
{904,(int)(7.46*256),(int)(1.00*256)}, 
{904,(int)(7.73*256),(int)(1.00*256)}, 
{904,(int)(8.00*256),(int)(1.00*256)}, 
{904,(int)(8.28*256),(int)(1.00*256)}, 
{904,(int)(8.57*256),(int)(1.00*256)}, 
{904,(int)(8.88*256),(int)(1.00*256)},  //200
{904,(int)(9.19*256),(int)(1.00*256)}, 
{904,(int)(9.51*256),(int)(1.00*256)}, 
{904,(int)(9.85*256),(int)(1.00*256)}  
};
#else
static const  int g_GC1004_exp_time_gain_60Hz[GC1004_60HZ_EXP_TIME_TOTAL][3] = 
{ // {time, analog gain, digital gain}
{8	,(int)(1.00*100), (int)(1.00*256)},
{9	,(int)(1.00*100), (int)(1.00*256)},
{9	,(int)(1.00*100), (int)(1.00*256)},
{9	,(int)(1.00*100), (int)(1.00*256)},
{10	,(int)(1.00*100), (int)(1.00*256)},
{10	,(int)(1.00*100), (int)(1.00*256)},
{10	,(int)(1.00*100), (int)(1.00*256)},
{11	,(int)(1.00*100), (int)(1.00*256)},
{11	,(int)(1.00*100), (int)(1.00*256)},
{11	,(int)(1.00*100), (int)(1.00*256)},//10
{12	,(int)(1.00*100), (int)(1.00*256)},
{12	,(int)(1.00*100), (int)(1.00*256)},
{13	,(int)(1.00*100), (int)(1.00*256)},
{13	,(int)(1.00*100), (int)(1.00*256)},
{13	,(int)(1.00*100), (int)(1.00*256)},
{14	,(int)(1.00*100), (int)(1.00*256)},
{14	,(int)(1.00*100), (int)(1.00*256)},
{15	,(int)(1.00*100), (int)(1.00*256)},
{16	,(int)(1.00*100), (int)(1.00*256)},
{16	,(int)(1.00*100), (int)(1.00*256)},//20
{17	,(int)(1.00*100), (int)(1.00*256)},
{17	,(int)(1.00*100), (int)(1.00*256)},
{18	,(int)(1.00*100), (int)(1.00*256)},
{18	,(int)(1.00*100), (int)(1.00*256)},
{19	,(int)(1.00*100), (int)(1.00*256)},
{20	,(int)(1.00*100), (int)(1.00*256)},
{20	,(int)(1.00*100), (int)(1.00*256)},
{21	,(int)(1.00*100), (int)(1.00*256)},
{22	,(int)(1.00*100), (int)(1.00*256)},
{23	,(int)(1.00*100), (int)(1.00*256)},//30
{24	,(int)(1.00*100), (int)(1.00*256)},
{24	,(int)(1.00*100), (int)(1.00*256)},
{25	,(int)(1.00*100), (int)(1.00*256)},
{26	,(int)(1.00*100), (int)(1.00*256)},
{27	,(int)(1.00*100), (int)(1.00*256)},
{28	,(int)(1.00*100), (int)(1.00*256)},
{29	,(int)(1.00*100), (int)(1.00*256)},
{30	,(int)(1.00*100), (int)(1.00*256)},
{31	,(int)(1.00*100), (int)(1.00*256)},
{32	,(int)(1.00*100), (int)(1.00*256)},//40
{33	,(int)(1.00*100), (int)(1.00*256)},
{34	,(int)(1.00*100), (int)(1.00*256)},
{36	,(int)(1.00*100), (int)(1.00*256)},
{37	,(int)(1.00*100), (int)(1.00*256)},
{38	,(int)(1.00*100), (int)(1.00*256)},
{40	,(int)(1.00*100), (int)(1.00*256)},
{41	,(int)(1.00*100), (int)(1.00*256)},
{42	,(int)(1.00*100), (int)(1.00*256)},
{44	,(int)(1.00*100), (int)(1.00*256)},
{45	,(int)(1.00*100), (int)(1.00*256)},//50
{47	,(int)(1.00*100), (int)(1.00*256)},
{49	,(int)(1.00*100), (int)(1.00*256)},
{50	,(int)(1.00*100), (int)(1.00*256)},
{52	,(int)(1.00*100), (int)(1.00*256)},
{54	,(int)(1.00*100), (int)(1.00*256)},
{56	,(int)(1.00*100), (int)(1.00*256)},
{58	,(int)(1.00*100), (int)(1.00*256)},
{60	,(int)(1.00*100), (int)(1.00*256)},
{62	,(int)(1.00*100), (int)(1.00*256)},
{64	,(int)(1.00*100), (int)(1.00*256)},//60
{66	,(int)(1.00*100), (int)(1.00*256)},
{69	,(int)(1.00*100), (int)(1.00*256)},
{71	,(int)(1.00*100), (int)(1.00*256)},
{74	,(int)(1.00*100), (int)(1.00*256)},
{76	,(int)(1.00*100), (int)(1.00*256)},
{79	,(int)(1.00*100), (int)(1.00*256)},
{82	,(int)(1.00*100), (int)(1.00*256)},
{85	,(int)(1.00*100), (int)(1.00*256)},
{88	,(int)(1.00*100), (int)(1.00*256)},
{91	,(int)(1.00*100), (int)(1.00*256)},//70
{94	,(int)(1.00*100), (int)(1.00*256)},
{97	,(int)(1.00*100), (int)(1.00*256)},
{101,(int)(1.00*100), (int)(1.00*256)},
{104,(int)(1.00*100), (int)(1.00*256)},
{108,(int)(1.00*100), (int)(1.00*256)},
{112,(int)(1.00*100), (int)(1.00*256)},
{116,(int)(1.00*100), (int)(1.00*256)},
{120,(int)(1.00*100), (int)(1.00*256)},
{124,(int)(1.00*100), (int)(1.00*256)},
{128,(int)(1.00*100), (int)(1.00*256)},//80
{133,(int)(1.00*100), (int)(1.00*256)},
{138,(int)(1.00*100), (int)(1.00*256)},
{142,(int)(1.00*100), (int)(1.00*256)},
{148,(int)(1.00*100), (int)(1.00*256)},
{153,(int)(1.00*100), (int)(1.00*256)},
{158,(int)(1.00*100), (int)(1.00*256)},
{164,(int)(1.00*100), (int)(1.00*256)},
{169,(int)(1.00*100), (int)(1.00*256)},
{175,(int)(1.00*100), (int)(1.00*256)},
{182,(int)(1.00*100), (int)(1.00*256)},//90
{188,(int)(1.00*100), (int)(1.00*256)},
{188,(int)(1.04*100), (int)(1.00*256)},
{188,(int)(1.06*100), (int)(1.00*256)},
{188,(int)(1.11*100), (int)(1.00*256)},
{188,(int)(1.15*100), (int)(1.00*256)},//95,daylight
{188,(int)(1.19*100), (int)(1.00*256)},
{188,(int)(1.23*100), (int)(1.00*256)},
{188,(int)(1.27*100), (int)(1.00*256)},
{188,(int)(1.31*100), (int)(1.00*256)},
{188,(int)(1.37*100), (int)(1.00*256)},//100
{188,(int)(1.41*100), (int)(1.00*256)},
{188,(int)(1.46*100), (int)(1.00*256)},
{188,(int)(1.52*100), (int)(1.00*256)},
{188,(int)(1.57*100), (int)(1.00*256)},
{188,(int)(1.62*100), (int)(1.00*256)},
{188,(int)(1.68*100), (int)(1.00*256)},
{188,(int)(1.74*100), (int)(1.00*256)},
{210,(int)(1.68*100), (int)(1.00*256)},
{220,(int)(1.65*100), (int)(1.00*256)},
{250,(int)(1.50*100), (int)(1.00*256)},//110
{280,(int)(1.40*100), (int)(1.00*256)},
{310,(int)(1.30*100), (int)(1.00*256)},
{340,(int)(1.23*100), (int)(1.00*256)},
{376,(int)(1.11*100), (int)(1.00*256)},
{376,(int)(1.15*100), (int)(1.00*256)},
{376,(int)(1.19*100), (int)(1.00*256)},
{376,(int)(1.23*100), (int)(1.00*256)},
{376,(int)(1.27*100), (int)(1.00*256)},
{376,(int)(1.31*100), (int)(1.00*256)},
{376,(int)(1.37*100), (int)(1.00*256)},//120
{376,(int)(1.41*100), (int)(1.00*256)},
{376,(int)(1.46*100), (int)(1.00*256)},//121,init
{376,(int)(1.52*100), (int)(1.00*256)},
{376,(int)(1.57*100), (int)(1.00*256)},
{376,(int)(1.62*100), (int)(1.00*256)},
{376,(int)(1.68*100), (int)(1.00*256)},
{376,(int)(1.74*100), (int)(1.00*256)},
{376,(int)(1.80*100), (int)(1.00*256)},
{406,(int)(1.73*100), (int)(1.00*256)},
{440,(int)(1.65*100), (int)(1.00*256)},//130
{475,(int)(1.57*100), (int)(1.00*256)},//
{516,(int)(1.50*100), (int)(1.00*256)},
{546,(int)(1.46*100), (int)(1.00*256)},
{564,(int)(1.46*100), (int)(1.00*256)},
{564,(int)(1.52*100), (int)(1.00*256)},
{564,(int)(1.57*100), (int)(1.00*256)},
{564,(int)(1.62*100), (int)(1.00*256)},
{564,(int)(1.68*100), (int)(1.00*256)},
{564,(int)(1.74*100), (int)(1.00*256)},
{564,(int)(1.80*100), (int)(1.00*256)},//140
{600,(int)(1.76*100), (int)(1.00*256)},
{630,(int)(1.74*100), (int)(1.00*256)},
{670,(int)(1.71*100), (int)(1.00*256)},
{700,(int)(1.69*100), (int)(1.00*256)},
{752,(int)(1.62*100), (int)(1.00*256)},
{752,(int)(1.68*100), (int)(1.00*256)},
{752,(int)(1.74*100), (int)(1.00*256)},
{752,(int)(1.80*100), (int)(1.00*256)},
{752,(int)(1.87*100), (int)(1.00*256)},
{752,(int)(1.93*100), (int)(1.00*256)},//150, night
{752,(int)(2.00*100), (int)(1.00*256)},
{752,(int)(2.07*100), (int)(1.00*256)},
{752,(int)(2.14*100), (int)(1.00*256)},
{752,(int)(2.22*100), (int)(1.00*256)},
{752,(int)(2.30*100), (int)(1.00*256)},
{752,(int)(2.38*100), (int)(1.00*256)},
{752,(int)(2.46*100), (int)(1.00*256)},
{752,(int)(2.55*100), (int)(1.00*256)},
{752,(int)(2.64*100), (int)(1.00*256)},
{752,(int)(2.73*100), (int)(1.00*256)},//160
{752,(int)(2.83*100), (int)(1.00*256)},
{752,(int)(2.93*100), (int)(1.00*256)},
{752,(int)(3.03*100), (int)(1.00*256)},
{752,(int)(3.14*100), (int)(1.00*256)},
{752,(int)(3.25*100), (int)(1.00*256)},
{752,(int)(3.36*100), (int)(1.00*256)},
{752,(int)(3.48*100), (int)(1.00*256)},
{752,(int)(3.61*100), (int)(1.00*256)},
{752,(int)(3.73*100), (int)(1.00*256)},
{752,(int)(3.86*100), (int)(1.00*256)},//170
{752,(int)(4.00*100), (int)(1.00*256)},
{752,(int)(4.14*100), (int)(1.00*256)},
{752,(int)(4.29*100), (int)(1.00*256)},
{752,(int)(4.44*100), (int)(1.00*256)},
{752,(int)(4.59*100), (int)(1.00*256)},
{752,(int)(4.76*100), (int)(1.00*256)},
{752,(int)(4.92*100), (int)(1.00*256)},
{752,(int)(5.10*100), (int)(1.00*256)},
{752,(int)(5.28*100), (int)(1.00*256)},
{752,(int)(5.46*100), (int)(1.00*256)},//180
{752,(int)(5.66*100), (int)(1.00*256)},
{752,(int)(5.86*100), (int)(1.00*256)},
{752,(int)(6.06*100), (int)(1.00*256)},
{752,(int)(6.28*100), (int)(1.00*256)},
{752,(int)(6.50*100), (int)(1.00*256)},
{752,(int)(6.73*100), (int)(1.00*256)},
{752,(int)(6.96*100), (int)(1.00*256)},
{752,(int)(7.21*100), (int)(1.00*256)},
{752,(int)(7.46*100), (int)(1.00*256)},

{752,(int)(7.73*100), (int)(1.00*256)},//190
{752,(int)(8.00*100), (int)(1.00*256)},
{752,(int)(8.28*100), (int)(1.00*256)},
{752,(int)(8.57*100), (int)(1.00*256)},
{752,(int)(8.88*100), (int)(1.00*256)},
{752,(int)(9.19*100), (int)(1.00*256)},
{752,(int)(9.51*100), (int)(1.00*256)},
{752,(int)(9.85*100), (int)(1.00*256)} 
};

#define C_BF2116_EXP_STEP_50Hz 225
#define C_BF2116_EXP_STEP_60Hz 187

static const  int g_GC1004_exp_time_gain_50Hz[GC1004_50HZ_EXP_TIME_TOTAL][3] =  //203,recount by u2
{ // {time, analog gain, digital gain}
{8  ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{9  ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{9  ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{9  ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{10 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{10 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{10 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{11 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{11 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{11 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)},  //10
{12 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{12 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{13 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{13 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{14 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{14 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{15 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{15 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{16 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{16 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)},  //20
{17 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{17 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{18 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{19 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{19 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{20 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{21 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{21 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{22 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{23 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{24 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{25 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{25 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{26 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{27 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{28 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{29 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{30 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{31 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{32 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)},  //40
{34 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{35 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{36 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{37 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{39 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{40 ,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{41 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{43 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{44 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{46 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{48 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{49 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{51 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{53 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{55 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{57 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{58 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{61 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{63 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{65 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)},  //60
{67 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{70 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{72 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{75 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{77 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{80 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{83 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{86 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{89 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{92 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{95 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{98 ,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{102,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{105,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{109,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{113,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{117,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{121,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{125,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{130,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)},  //80
{134,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{139,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{144,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{149,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{154,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{160,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{165,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{171,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)}, 
{177,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)},  
{184,(int)(ANALONG_GAIN* 1.00*100),(int)(1.00*256)},  //90
{190,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{197,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{204,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{211,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
{218,(int)(ANALONG_GAIN*1.00*100),(int)(1.00*256)}, 
// 10ms            
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.00*100),(int)(1.00*256)},  //96,daylight
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.01*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.10*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.15*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.21*100),(int)(1.00*256)},  //100
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.30*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.33*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.38*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.44*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.52*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.58*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.64*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.70*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.77*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.81*100),(int)(1.00*256)},  //110
{C_BF2116_EXP_STEP_50Hz*1,(int)(1.88*100),(int)(1.00*256)},
//20 ms
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.00*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.01*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.10*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.15*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.21*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.30*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.33*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.38*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.44*100),(int)(1.00*256)}, //120
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.52*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.58*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.64*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.70*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.77*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.81*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.88*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*2,(int)(1.94*100),(int)(1.00*256)},
//30 ms
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.30*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.33*100),(int)(1.00*256)}, //130
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.38*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.44*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.52*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.58*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.64*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.70*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.77*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.81*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.88*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(1.94*100),(int)(1.00*256)},  //140
{C_BF2116_EXP_STEP_50Hz*3,(int)(2.04*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(2.17*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(2.25*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*3,(int)(2.39*100),(int)(1.00*256)},
//40ms
{C_BF2116_EXP_STEP_50Hz*4,(int)(1.81*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(1.88*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(1.94*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(2.04*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(2.17*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(2.25*100),(int)(1.00*256)},  //150
{C_BF2116_EXP_STEP_50Hz*4,(int)(2.39*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(2.51*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(2.60*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(2.71*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(2.85*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(2.99*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(3.09*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(3.20*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(3.32*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(3.46*100),(int)(1.00*256)},  //160
{C_BF2116_EXP_STEP_50Hz*4,(int)(3.55*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(3.65*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(3.66*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(3.89*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(4.10*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(4.28*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(4.53*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(4.70*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(4.90*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(5.11*100),(int)(1.00*256)}, //170
{C_BF2116_EXP_STEP_50Hz*4,(int)(5.40*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(5.58*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(5.83*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(5.99*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(6.26*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(6.42*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(6.62*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(6.86*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(7.11*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(7.50*100),(int)(1.00*256)}, //180
{C_BF2116_EXP_STEP_50Hz*4,(int)(7.90*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*4,(int)(8.25*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*4,(int)(8.74*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*4,(int)(9.07*100),(int)(1.00*256)},      
{C_BF2116_EXP_STEP_50Hz*4,(int)(9.57*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(9.92*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(10.50*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(10.80*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(11.19*100),(int)(1.00*256)}, //189
{C_BF2116_EXP_STEP_50Hz*4,(int)(11.49*100),(int)(1.00*256)}, //190
{C_BF2116_EXP_STEP_50Hz*4,(int)(12.06*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(12.33*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(12.80*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(13.13*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(13.19*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(13.90*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(14.69*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(15.38*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(16.28*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(16.95*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(17.76*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(18.43*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(19.51*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(20.07*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(20.98*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(21.55*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(22.58*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(23.11*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(23.92*100),(int)(1.00*256)},
{C_BF2116_EXP_STEP_50Hz*4,(int)(24.43*100),(int)(1.00*256)}, //210
};
#endif

/************************
 MCLK=24Mhz;        
 VCO = 384 Mhz      
 PCLK= 38.4         
 Frame width= 1500  
 Frame Height= 854  
*************************/

//720P Parallel RAW 30fps
static INT8U GC1004_Para_720P_30[][2] = 
{
#if 0
{0xf1, 0x00},//80
{0xfe, 0x00},
{0x00, 0x78},
{0x01, 0x04},
{0x02, 0x30},
{0x09, 0x40},
{0x0a, 0x86},
{0x0b, 0x04},
{0x0c, 0x00},
{0x0d, 0x0a},
{0x0e, 0x00},
{0x15, 0x24},
{0x5c, 0x9c},
{0xfe, 0x01},
{0xe0, 0x7c},
{0xe1, 0x6f},
{0xe2, 0x33},
{0xe3, 0x00},
{0xe5, 0x92},
{0xe6, 0x12},
{0xe7, 0x11},
{0xe9, 0x00},
{0xea, 0xc0},
{0xeb, 0x11},
{0xee, 0x81},
{0x6a, 0x1a},
{0x6b, 0x02},
{0x6c, 0xAF},
{0x6d, 0x20},
{0x6e, 0x50},
{0xfe, 0x00},
{0xcd, 0x08},
{0xcf, 0xd8},
{0x98, 0x06}
#else
{0xf1, 0x00},//80
{0xfe, 0x00},
#if SENSOR_FLIP
{0x00, 0x60},
#else
{0x00, 0x78},
#endif
{0x01, 0x04},
{0x02, 0x30},
{0x09, 0x40},
{0x0a, 0x86},
{0x0b, 0x04},
{0x0c, 0x00},
{0x0d, 0xa0},
{0x0e, 0x00},
{0x15, 0x24},
{0x5c, 0x9c},
{0xfe, 0x01},
{0xe0, 0x7c},
{0xe1, 0x6f},
{0xe2, 0x33},
{0xe3, 0x00},
{0xe5, 0x92},
{0xe6, 0x12},
{0xe7, 0x11},
{0xe9, 0x02},
{0xea, 0xc0},
{0xeb, 0x11},
{0xee, 0x81},
{0x6a, 0x1a},
{0x6b, 0x02},
{0x6c, 0xAF},
{0x6d, 0x20},
{0x6e, 0x50},
{0xfe, 0x00},
{0xcd, 0x08},
{0xcf, 0xd8},
{0x98, 0x06}

#endif

};
//1280x800x30_Mipi10
static INT8U GC1004_MIPI_1280_800_30[][2] =
{
	// SYS
	{0xFE, 0x80}
};

static INT8U GC1004_MIPI_720P[][2] =
{
	// SYS
	{0xFE, 0x80}
};

static INT8U GC1004_MIPI_VGA_f60[][2] =
{
	// SYS
	{0xFE, 0x80}
};

/**************************************************************************
 *                         G L O B A L    D A T A  For CDSP using                          *
 **************************************************************************/

static const short g_GC1004_badpix_ob_table[12] = 
{
	0, 		// obautoen
	1, 		// obmanuen
	33,//48,// 		// maunob
	
	1, 		// wboffseten
	0,//4,		// wbo_r
	0, 		// wbo_gr
	0, 		// wbo_gb
	0,//4, 		// wbo_b
	
	1,		//badPixel En
	160,	//bprthr
	160,	//bpgthr
	160		//bpbthr
};


static const unsigned short g_GC1004_r_b_gain[71][2] = 
{ // { r gain, b gain }
#if 1
/*	//2014.10.03.David
	{60 ,127},          
	{61 ,125},          
	{62 ,123},          
	{63 ,121},          
	{64 ,119},          
	{66 ,118},          
	{67 ,116},          
	{68 ,114},          
	{69 ,112},          
	{70 ,111},          
	{71 ,109},          
	{72 ,108},          
	{73 ,106},          
	{75 ,105},          
	{76 ,103},          
	{77 ,102},          
	{78 ,100},          
	{79 ,99 },          
	{80 ,97 },          
	{81 ,96 },          
	{82 ,95 },//40      
	{83 ,94 },          
	{84 ,92 },          
	{85 ,91 },          
	{86 ,90 },          
	{87 ,89 },          
	{88 ,88 },          
	{90 ,87 },          
	{91 ,86 },          
	{92 ,85 },          
	{93 ,84 },//50      
	{94 ,83 },          
	{95 ,82 },          
	{96 ,81 },          
	{97 ,80 },          
	{98 ,79 },          
	{99 ,78 },          
	{99 ,78 },          
	{100,77 },          
	{101,76 },          
	{102,76 },//60      
	{103,75 },          
	{104,74 },          
	{105,74 },          
	{106,73 },          
	{107,73 },          
	{108,72 },          
	{109,72 },          
	{110,71 },          
	{111,71 },          
	{112,71 },//70      
	{112,70 },          
	{113,70 },          
	{114,70 },          
	{115,70 },          
	{116,70 },          
	{117,69 },          
	{118,69 },          
	{119,69 },          
	{119,69 },          
	{120,69 },          
	{121,69 },          
	{122,69 },          
	{123,69 },          
	{123,69 },          
	{124,69 },          
	{125,70 },          
	{126,70 },          
	{127,70 },          
	{127,70 },          
	{128,71 } */ 
	
	//2014.10.03.David
	{60 ,126},          
	{62 ,124},          
	{63 ,122},          
	{64 ,120},          
	{65 ,118},          
	{66 ,117},          
	{67 ,115},          
	{68 ,113},          
	{69 ,112},          
	{71 ,110},          
	{72 ,109},          
	{73 ,107},          
	{74 ,106},          
	{75 ,104},          
	{76 ,103},          
	{77 ,101},          
	{78 ,100},          
	{79 ,98 },          
	{80 ,97 },          
	{81 ,96 },          
	{83 ,95 },//40      
	{84 ,93 },          
	{85 ,92 },          
	{86 ,91 },          
	{87 ,90 },          
	{88 ,89 },          
	{89 ,88 },          
	{90 ,86 },          
	{91 ,85 },          
	{92 ,84 },          
	{93 ,83 },//50      
	{94 ,83 },          
	{95 ,82 },          
	{96 ,81 },          
	{97 ,80 },          
	{98 ,79 },          
	{99 ,78 },          
	{100,78 },          
	{101,77 },          
	{102,76 },          
	{103,75 },//60      
	{104,75 },          
	{105,74 },          
	{106,74 },          
	{107,73 },          
	{108,72 },          
	{109,72 },          
	{110,72 },          
	{111,71 },          
	{112,71 },          
	{113,70 },//70      
	{114,70 },          
	{114,70 },          
	{115,69 },          
	{116,69 },          
	{117,69 },          
	{118,69 },          
	{119,68 },          
	{120,68 },          
	{121,68 },          
	{122,68 },          
	{123,68 },          
	{124,68 },          
	{124,68 },          
	{125,68 },          
	{126,68 },          
	{127,68 },          
	{128,68 },          
	{129,69 },          
	{130,69 },          
	{130,69 }   	
	      
#else
//2014-12-11.u2
	{60 ,127},        //{38	,107},
	{61 ,125},        //{40	,105},
	{62 ,123},        //{42	,104},
	{63 ,121},        //{45	,102},
	{65 ,119},        //{47	,101},
	{66 ,117},        //{49	,100},
	{67 ,116},        //{51	,98 },
	{68 ,114},        //{53	,97 },
	{69 ,112}, //2800K//{54	,96 },
	{70 ,111},        //{56	,95 },
	{71 ,109}, //3000K//{58	,93 },
	{72 ,108},        //{59	,92 },
	{73 ,106},        //{61	,91 },
	{74 ,105},        //{62	,90 },
	{75 ,103},        //{64	,89 },
	{76 ,102},        //{65	,88 },
	{77 ,100},        //{66	,87 },
	{79 ,99 },        //{68	,85 },
	{80 ,98 },        //{69	,84 },
	{81 ,96 },        //{70	,83 },
	{82 ,95 }, //4000K//{71	,82 },//40
	{83 ,94 }, //4100K//{72	,82 },
	{84 ,92 },        //{73	,81 },
	{85 ,91 },        //{74	,80 },
	{86 ,90 },        //{75	,79 },
	{87 ,89 },        //{76	,78 },
	{88 ,88 },        //{77	,77 },
	{89 ,87 },        //{78	,76 },
	{90 ,86 },        //{78	,75 },
	{91 ,85 },        //{79	,75 },
	{92 ,84 }, //5000K//{80	,74 },//50
	{93 ,83 },        //{81	,73 },
	{94 ,82 },        //{81	,72 },
	{95 ,81 },        //{82	,72 },
	{96 ,80 },        //{82	,71 },
	{97 ,80 },        //{83	,70 },
	{97 ,79 },        //{84	,69 },
	{98 ,78 },        //{84	,69 },
	{99 ,77 },        //{85	,68 },
	{100,77 },        //{85	,68 },
	{101,76 }, //6000K//{86	,67 },//60
	{102,76 },        //{86	,66 },
	{103,75 },        //{87	,66 },
	{104,74 },        //{87	,65 },
	{105,74 }, //6400K//{88	,65 },
	{106,74 },        //{88	,64 },
	{107,73 },        //{89	,64 },
	{108,73 },        //{89	,63 },
	{109,72 },        //{90	,63 },
	{109,72 },        //{90	,62 },
	{110,72 }, //7000K//{91	,62 },//70
	{111,71 },        //{91	,61 },
	{112,71 },        //{92	,61 },
	{113,71 },        //{93	,60 },
	{114,71 },        //{93	,60 },
	{115,71 },        //{94	,59 },
	{116,70 },        //{94	,59 },
	{116,70 },        //{95	,59 },
	{117,70 },        //{96	,58 },
	{118,70 },        //{96	,58 },
	{119,70 }, //8000K//{97	,58 },
	{120,70 },        //{98	,57 },
	{121,70 },        //{99	,57 },
	{121,70 },        //{99	,57 },
	{122,71 },        //{100,56 },
	{123,71 },        //{101,56 },
	{124,71 },        //{102,56 },
	{125,71 },        //{103,55 },
	{125,71 },        //{104,55 },
	{126,72 },        //{105,55 },
	{127,72 }  //9000K//{106,55 }
#endif
};


static const unsigned int g_GC1004_gamma_045_table[] = 	
{
/*
#if 1	//2014.10.03.David
0x114414, 0x045118, 0x11141d, 0x045121, 0x044426, 0x11112a, 0x11112e, 0x111132, 
0x111136, 0x11113a, 0x11113e, 0x011142, 0x044446, 0x11104a, 0x04114d, 0x110451, 
0x044154, 0x011058, 0x11045b, 0x10445e, 0x044161, 0x044164, 0x044167, 0x04416a, 
0x10416d, 0x010470, 0x010473, 0x041076, 0x004178, 0x04107b, 0x00417d, 0x041080, 
0x010182, 0x104085, 0x041087, 0x010489, 0x01018b, 0x00408e, 0x004090, 0x004092, 
0x004094, 0x004096, 0x010098, 0x010199, 0x04049b, 0x10109d, 0x00409f, 0x0401a0, 
0x1004a2, 0x0040a4, 0x1004a5, 0x0040a7, 0x1001a8, 0x0040aa, 0x1004ab, 0x0100ad, 
0x0010ae, 0x1001af, 0x0100b1, 0x0040b2, 0x0004b3, 0x1000b5, 0x0400b6, 0x0100b7, 
0x0040b8, 0x0010b9, 0x0004ba, 0x0001bb, 0x0001bc, 0x0000be, 0x1000bf, 0x1000c0, 
0x1000c1, 0x1000c2, 0x0000c3, 0x0000c4, 0x0000c5, 0x0000c6, 0x0001c6, 0x0001c7, 
0x0004c8, 0x0004c9, 0x0010ca, 0x0040cb, 0x0040cc, 0x0100cd, 0x0400ce, 0x0400cf, 
0x1000d0, 0x0000d1, 0x0000d2, 0x0000d3, 0x0001d3, 0x0001d4, 0x0004d5, 0x0004d6, 
0x0004d7, 0x0004d8, 0x0004d9, 0x0004da, 0x0004db, 0x0004dc, 0x0001dd, 0x0001de, 
0x1000e0, 0x0400e1, 0x0100e2, 0x0040e3, 0x0010e4, 0x0001e5, 0x0400e7, 0x0100e8, 
0x0010e9, 0x1001ea, 0x0100ec, 0x0010ed, 0x0400ef, 0x0010f0, 0x0401f1, 0x0010f3, 
0x0401f4, 0x0010f6, 0x0100f8, 0x0401f9, 0x0010fb, 0x0040fd, 0x0001fe, 0x0000ff
#else
//by u2 2014-12-11
0x114401, 0x045105, 0x11140a, 0x04450e, 0x114413, 0x111117, 0x04511b, 0x044420,  
0x044424, 0x044428, 0x04442c, 0x11112f, 0x011133, 0x044437, 0x11103b, 0x04413e,  
0x111042, 0x044445, 0x041148, 0x11104c, 0x11044f, 0x104452, 0x104155, 0x104158,  
0x10415b, 0x10445e, 0x010461, 0x011064, 0x041067, 0x104169, 0x01046c, 0x10106f,  
0x010471, 0x101074, 0x010476, 0x104079, 0x04047b, 0x01017d, 0x104080, 0x041082,  
0x010484, 0x010186, 0x004089, 0x10408b, 0x10108d, 0x10108f, 0x101091, 0x101093,  
0x101095, 0x101097, 0x101099, 0x10109b, 0x10109d, 0x00409f, 0x0040a1, 0x0040a3,  
0x0101a4, 0x0401a6, 0x0404a8, 0x1010aa, 0x0010ac, 0x0040ae, 0x0100b0, 0x0101b1,  
0x0404b3, 0x1004b5, 0x0010b7, 0x0040b9, 0x0100bb, 0x0101bc, 0x0401be, 0x0404c0,  
0x1004c2, 0x1010c4, 0x1010c6, 0x0040c8, 0x0040ca, 0x0040cc, 0x0040ce, 0x0040d0,  
0x0040d2, 0x1040d4, 0x1010d6, 0x1010d8, 0x0404da, 0x0104dc, 0x0101de, 0x1040e1,  
0x0410e3, 0x0104e5, 0x1041e7, 0x0410ea, 0x0101ec, 0x0410ef, 0x0104f1, 0x0410f4,  
0x1041f6, 0x0104f9, 0x0410fc, 0x0001fe, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff,  

#endif
*/
/*
0x000000, 0x000000, 0x000000, 0x000000, 0x044000, 0x111103, 0x144408, 0x05110c, 
0x144411, 0x111115, 0x051119, 0x04441e, 0x044422, 0x044426, 0x10442a, 0x11112d, 
0x041131, 0x044435, 0x111138, 0x04443c, 0x04113f, 0x110443, 0x104446, 0x104149, 
0x04414c, 0x04414f, 0x104152, 0x104155, 0x010458, 0x04105b, 0x10415d, 0x010460, 
0x041063, 0x010465, 0x104068, 0x04046a, 0x01016c, 0x10406f, 0x101071, 0x040473, 
0x040475, 0x040477, 0x040479, 0x04047b, 0x04047d, 0x10107f, 0x001081, 0x004083, 
0x010184, 0x100486, 0x004088, 0x01008a, 0x10048b, 0x00408d, 0x04018e, 0x004090, 
0x040191, 0x004093, 0x100194, 0x004096, 0x000497, 0x010099, 0x00109a, 0x10019b, 
0x01009d, 0x00109e, 0x10019f, 0x0100a1, 0x0010a2, 0x1001a3, 0x0100a5, 0x0010a6, 
0x0001a7, 0x0400a9, 0x0040aa, 0x0004ab, 0x0400ad, 0x0040ae, 0x0004af, 0x0400b1, 
0x0040b2, 0x0004b3, 0x0400b5, 0x0040b6, 0x1001b7, 0x0100b9, 0x0004ba, 0x0100bc, 
0x0010bd, 0x0100bf, 0x0004c0, 0x0100c2, 0x1004c3, 0x0040c5, 0x0100c7, 0x1004c8, 
0x0010ca, 0x0040cc, 0x0101cd, 0x0404cf, 0x1004d1, 0x1010d3, 0x1010d5, 0x1010d7, 
0x1010d9, 0x0404db, 0x0404dd, 0x0101df, 0x1040e2, 0x0410e4, 0x0104e6, 0x1040e9, 
0x0104eb, 0x1040ee, 0x0104f0, 0x0410f3, 0x0441f5, 0x1041f8, 0x1104fb, 0x0004fe, 
0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff*/

0x04510d, 0x051112, 0x111417, 0x14451b, 0x111120, 0x044425, 0x111129, 0x05112d, 
0x044432, 0x044436, 0x04443a, 0x04443e, 0x044442, 0x110446, 0x111149, 0x04444d, 
0x111051, 0x044154, 0x111058, 0x10445b, 0x04415e, 0x011062, 0x011065, 0x010468, 
0x01046b, 0x01046e, 0x041071, 0x041074, 0x104176, 0x010479, 0x04107c, 0x00417e, 
0x041081, 0x010183, 0x101086, 0x040488, 0x01018a, 0x10408d, 0x10108f, 0x041091, 
0x040493, 0x040495, 0x040497, 0x040499, 0x10109b, 0x00109d, 0x00409f, 0x0101a0, 
0x1004a2, 0x0010a4, 0x0100a6, 0x1004a7, 0x0040a9, 0x1001aa, 0x0040ac, 0x1001ad, 
0x0100af, 0x0004b0, 0x0400b2, 0x0040b3, 0x0004b4, 0x0400b6, 0x0100b7, 0x0010b8, 
0x0004b9, 0x1000bb, 0x0400bc, 0x0100bd, 0x0040be, 0x0010bf, 0x0004c0, 0x0004c1, 
0x0001c2, 0x0001c3, 0x0000c5, 0x0000c6, 0x0000c7, 0x0000c8, 0x0000c9, 0x0000ca, 
0x0000cb, 0x0000cc, 0x0000cd, 0x0000ce, 0x0000cf, 0x0000d0, 0x0001d0, 0x0001d1, 
0x0001d2, 0x0001d3, 0x0001d4, 0x0001d5, 0x0001d6, 0x0001d7, 0x0001d8, 0x0001d9, 
0x0000db, 0x0000dc, 0x1000dd, 0x0400de, 0x0400df, 0x0100e0, 0x0040e1, 0x0010e2, 
0x0004e3, 0x1000e5, 0x0100e6, 0x0040e7, 0x0004e8, 0x1000ea, 0x0100eb, 0x0004ec, 
0x0400ee, 0x0040ef, 0x1001f0, 0x0040f2, 0x1004f3, 0x0040f5, 0x0401f6, 0x0010f8, 
0x0100fa, 0x0404fb, 0x1010fd, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff, 0x0000ff
/*
0x114408, 0x04510c, 0x114411, 0x111115, 0x04441a, 0x04441e, 0x044422, 0x044426, 
0x04442a, 0x04442e, 0x110432, 0x011135, 0x044439, 0x11113c, 0x044440, 0x041143, 
0x111047, 0x10444a, 0x10444d, 0x104150, 0x104153, 0x104156, 0x104459, 0x01045c, 
0x04105f, 0x104161, 0x010464, 0x101067, 0x010469, 0x10406c, 0x04046e, 0x010170, 
0x004073, 0x101075, 0x041077, 0x040479, 0x04047b, 0x04047d, 0x04047f, 0x101081, 
0x001083, 0x004085, 0x010186, 0x100488, 0x00108a, 0x01008c, 0x10048d, 0x00408f, 
0x100490, 0x004092, 0x000493, 0x010095, 0x001096, 0x100197, 0x010099, 0x00109a, 
0x00019b, 0x04009d, 0x01009e, 0x00409f, 0x0004a0, 0x0001a1, 0x0000a3, 0x1000a4, 
0x0400a5, 0x0400a6, 0x0100a7, 0x0100a8, 0x0100a9, 0x0040aa, 0x0040ab, 0x0040ac, 
0x0040ad, 0x0040ae, 0x0100af, 0x0100b0, 0x0100b1, 0x0100b2, 0x0100b3, 0x0400b4, 
0x0400b5, 0x0400b6, 0x0400b7, 0x0400b8, 0x0400b9, 0x0400ba, 0x0400bb, 0x0400bc, 
0x0400bd, 0x0400be, 0x0100bf, 0x0100c0, 0x0040c1, 0x0010c2, 0x0004c3, 0x0004c4, 
0x1000c6, 0x0400c7, 0x0100c8, 0x0010c9, 0x0004ca, 0x0400cc, 0x0040cd, 0x0004ce, 
0x0400d0, 0x0040d1, 0x1001d2, 0x0040d4, 0x1001d5, 0x0040d7, 0x0401d8, 0x0010da, 
0x0100dc, 0x0401dd, 0x1010df, 0x0040e1, 0x0040e3, 0x0101e4, 0x0101e6, 0x0101e8, 
0x0101ea, 0x0101ec, 0x0101ee, 0x0040f1, 0x1010f3, 0x0404f5, 0x0101f7, 0x0410fa*/

};


static const short g_GC1004_color_matrix4gamma045[9] =
{	
/*
#if 1 
	//2014-10-03.david 
	(short)((1.0869887621105534000*64) + 0.5),
	(short)((-0.508891534834426620*64) + 0.5),
	(short)((0.4219027727238731100*64) + 0.5),
	(short)((-0.045287185406736173*64) + 0.5),
	(short)((1.0029607051670415000*64) + 0.5),
	(short)((0.0423264802396947780*64) + 0.5),
	(short)((0.0482682198624147930*64) + 0.5),
	(short)((-0.730418819256032470*64) + 0.5),
	(short)((1.6821505993936177000*64) + 0.5)  
#else
	//by u2 2014-12-11
	(short)((1.75076661612409870000 *64) + 0.5),
	(short)((-0.50536997762433444000*64) + 0.5),
	(short)((-0.24539663849976434000*64) + 0.5),
	(short)((-0.61931791556802995000*64) + 0.5),
	(short)((2.31433800595897580000 *64) + 0.5),
	(short)((-0.69502009039094570000*64) + 0.5),
	(short)((-0.33764104948579698000*64) + 0.5),
	(short)((-1.24065644966957310000*64) + 0.5),
	(short)((2.57829749915537040000 *64) + 0.5) 
#endif
*/                                                
/*	(short)((1.71818018106773570000*64) + 0.5),
	(short)((-0.7782653358314701700*64) + 0.5),
	(short)((0.06008515476373448000*64) + 0.5),
	(short)((-0.3174198243716618300*64) + 0.5),
	(short)((1.41737088299280420000*64) + 0.5),
	(short)((-0.0999510586211424940*64) + 0.5),
	(short)((0.04427989853074996300*64) + 0.5),
	(short)((-1.3449290267220431000*64) + 0.5),
	(short)((2.30064912819129310000*64) + 0.5)  */
	
(short)((1.72243346330159120000*64) + 0.5),
(short)((-0.7533168964769643100*64) + 0.5),
(short)((0.03088343317537314800*64) + 0.5),
(short)((-0.3062854100958305500*64) + 0.5),
(short)((1.57487104018641170000*64) + 0.5),
(short)((-0.2685856300905811700*64) + 0.5),
(short)((0.08097040247199804900*64) + 0.5),
(short)((-1.6649509613729883000*64) + 0.5),
(short)((2.58398055890099030000*64) + 0.5)

};


static const short g_GC1004_awb_thr[19] =  //2014-10-03.u2
{
	210, // awbwinthr
	
	0*64, // sindata
	1*64, // cosdata 
	
	 30, // Ythr0
	 80, // Ythr1
	150, // Ythr2 
	210, // Ythr3 
	
	-3, // UL1N1 
	 3, // UL1P1 
	-3, // VL1N1 
	 3, // VL1P1 
	
	 -5, //UL1N2
	  5, //UL1P2
	 -4, //VL1N2
	  4, // VL1P2
	
	 -6, // UL1N3
	  6, //UL1P3
	 -7, // VL1N3
	  7, //VL1P3
};

INT8U g_GC1004_LiTable_rgb[48]=
{	//R*16,Gb/Gr*16,B*16
	0x1e,0x2e,0x3e,0x4e,0x5e,0x6e,0x7e,0x8e,
	0x9e,0xae,0xbe,0xce,0xde,0xee,0xfe,0xff,
	0x0f,0x1f,0x2f,0x3f,0x4f,0x5f,0x6f,0x7f,
	0x8f,0x9f,0xaf,0xbf,0xcf,0xdf,0xef,0xff,
	0x07,0x17,0x27,0x37,0x47,0x57,0x67,0x77,
	0x87,0x97,0xa7,0xb7,0xc7,0xd7,0xe7,0xf7
};

const INT16U g_GC1004_MaxTan8[32]=
{
	0x08c,
	0x1d6,
	0x1f3,
	0x083,
	0x094,
	0x1bb,
	0x1a1,
	0x09d,
	0x08d,
	0x1d1,
	0x1ef,
	0x084,
	0x093,
	0x1bf,
	0x1a3,
	0x09c,
	0x08d,
	0x1d1,
	0x1ef,
	0x084,
	0x093,
	0x1be,
	0x1a4,
	0x09c,
	0x08e,
	0x1ce,
	0x1da,
	0x08a,
	0x092,
	0x1c2,
	0x1b6,
	0x096
};

const INT16U g_GC1004_Slope4[16]=
{
	0x1d6,
	0x1f3,
	0x1a1,
	0x1bb,
	0x1d1,
	0x1ef,
	0x1a3,
	0x1bf,
	0x1d1,
	0x1ef,
	0x1a4,
	0x1be,
	0x1ce,
	0x1da,
	0x1b6,
	0x1c2
};

const INT16U g_GC1004_CLPoint[8]=		//Sensor Center is Weight/2, Hight/2 for RGB
{
	0x26c,
	0x152,
	0x26b,
	0x155,
	0x26c,
	0x155,
	0x277,
	0x15e
};

const INT16U g_GC1004_Radius_File_0[512]=
{
0x10f,
0x10f,
0x10f,
0x10f,
0x10f,
0x10f,
0x10f,
0x10f,
0x14f,
0x13c,
0x13e,
0x142,
0x158,
0x15b,
0x156,
0x151,
0x181,
0x161,
0x13e,
0x16e,
0x192,
0x19d,
0x153,
0x17f,
0x1c1,
0x196,
0x13e,
0x192,
0x1cf,
0x1e3,
0x153,
0x1b4,
0x1c1,
0x1d4,
0x13e,
0x1da,
0x1f2,
0x243,
0x153,
0x1f2,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x10f,
0x10f,
0x10f,
0x10f,
0x10f,
0x10f,
0x10f,
0x10f,
0x14d,
0x13d,
0x135,
0x141,
0x14e,
0x152,
0x146,
0x146,
0x179,
0x15e,
0x135,
0x162,
0x18e,
0x196,
0x149,
0x16f,
0x19d,
0x182,
0x135,
0x196,
0x1c4,
0x1d5,
0x149,
0x1a0,
0x19d,
0x1be,
0x135,
0x1cf,
0x1d8,
0x22b,
0x149,
0x1dc,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x10a,
0x10a,
0x10a,
0x10a,
0x10a,
0x10a,
0x10a,
0x10a,
0x146,
0x136,
0x12f,
0x141,
0x14b,
0x14d,
0x13e,
0x143,
0x173,
0x15c,
0x12f,
0x165,
0x18d,
0x191,
0x143,
0x178,
0x1a5,
0x183,
0x12f,
0x193,
0x1cb,
0x1cc,
0x143,
0x1a0,
0x1a5,
0x1b0,
0x12f,
0x1c8,
0x1d1,
0x21a,
0x143,
0x1de,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x10c,
0x10c,
0x10c,
0x10c,
0x10c,
0x10c,
0x10c,
0x10c,
0x15c,
0x157,
0x14a,
0x156,
0x161,
0x161,
0x154,
0x154,
0x1b0,
0x196,
0x14a,
0x194,
0x1bb,
0x1ac,
0x15a,
0x1a6,
0x1f5,
0x1cb,
0x14a,
0x1d7,
0x209,
0x21d,
0x15a,
0x1e5,
0x1f5,
0x214,
0x14a,
0x224,
0x216,
0x26d,
0x15a,
0x236,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245
};

const INT16U g_GC1004_Radius_File_1[512]=
{

0x134,
0x132,
0x127,
0x128,
0x136,
0x135,
0x137,
0x132,
0x16a,
0x151,
0x13e,
0x160,
0x17f,
0x17d,
0x153,
0x166,
0x194,
0x176,
0x13e,
0x180,
0x1b4,
0x1bf,
0x153,
0x1a2,
0x1c1,
0x1a5,
0x13e,
0x1c3,
0x1f2,
0x205,
0x153,
0x1d2,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x1c1,
0x1d4,
0x13e,
0x1f7,
0x1f2,
0x274,
0x153,
0x22a,
0x133,
0x12a,
0x128,
0x125,
0x12f,
0x128,
0x12d,
0x12d,
0x161,
0x14c,
0x135,
0x15a,
0x16b,
0x171,
0x149,
0x15b,
0x185,
0x168,
0x135,
0x179,
0x1af,
0x1b8,
0x149,
0x18c,
0x19d,
0x197,
0x135,
0x1a7,
0x1d8,
0x1f8,
0x149,
0x1ba,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x19d,
0x1be,
0x135,
0x1d9,
0x1d8,
0x24f,
0x149,
0x1e2,
0x132,
0x12a,
0x121,
0x124,
0x125,
0x12c,
0x12c,
0x12c,
0x15f,
0x14c,
0x12f,
0x153,
0x16a,
0x16e,
0x143,
0x15e,
0x182,
0x16c,
0x12f,
0x178,
0x1a6,
0x1ab,
0x143,
0x187,
0x1a5,
0x19b,
0x12f,
0x1b0,
0x1d1,
0x1ee,
0x143,
0x1b8,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x1a5,
0x1b0,
0x12f,
0x1d6,
0x1d1,
0x22c,
0x143,
0x1e6,
0x137,
0x135,
0x134,
0x12c,
0x137,
0x136,
0x135,
0x130,
0x187,
0x170,
0x14a,
0x171,
0x18d,
0x18a,
0x15a,
0x17b,
0x1ce,
0x1b5,
0x14a,
0x1b3,
0x1de,
0x1ec,
0x15a,
0x1cc,
0x1f5,
0x1f3,
0x14a,
0x1fc,
0x216,
0x24c,
0x15a,
0x212,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245,
0x1f5,
0x214,
0x14a,
0x239,
0x216,
0x283,
0x15a,
0x245
};
#endif //(USE_SENSOR_NAME == SENSOR_GC1004)
/****************************************************************************/
#endif	// __DRV_SENSOR_GC1004_H__
/****************************************************************************/
